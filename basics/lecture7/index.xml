<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Лекция #7 on Материалы курсов на кафедре Технологии Программирования. ПМ-ПУ</title>
    <link>https://apmath-spbu.github.io/basics/lecture7/</link>
    <description>Recent content in Лекция #7 on Материалы курсов на кафедре Технологии Программирования. ПМ-ПУ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru-ru</language><atom:link href="https://apmath-spbu.github.io/basics/lecture7/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Шаблоны</title>
      <link>https://apmath-spbu.github.io/basics/lecture7/templates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://apmath-spbu.github.io/basics/lecture7/templates/</guid>
      <description>Шаблонные методы Допустим нам необходимо написать функцию вычисления максимума для целочисленных значений:
int max2(int a, int b) { return a &amp;gt; b ? a : b; } Перегрузив, функцию можно также описать и для значений с плавающей точкой:
double max2(double a, double b) { return a &amp;gt; b ? a : b; } Явно видно, что код очень похож, отличие лишь в типе, с которым мы работаем. В C++ это можно обобщить добавив вместо описания конкретного типа - шаблон.</description>
    </item>
    
    <item>
      <title>Исключения</title>
      <link>https://apmath-spbu.github.io/basics/lecture7/try-catch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://apmath-spbu.github.io/basics/lecture7/try-catch/</guid>
      <description>Естественный порядок функционирования программ нарушают возникающие нештатные ситуации, в большинстве случаев связанные с ошибками времени выполнения (но не всегда).
 нехватка оперативной памяти попытка доступа к элементы коллекции по некорректному индексу попытка недопустимого преобразования динамических типов и пр.  Обработка исключительных ситуаций носит невозвратный характер.
Носителями информации об аномальной ситуации (исключении) в C++ являются объекты заранее выбранные на эту роль типов (пользовательских или… базовых, например char*). Такие объекты называются **объектами-исключениями**. Жизненный цикл объектов-исключений начинается с возбуждения исключительной ситуации посредством оператора **throw**.</description>
    </item>
    
  </channel>
</rss>
