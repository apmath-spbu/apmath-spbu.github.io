<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Введение on Материалы курсов на кафедре Технологии Программирования. ПМ-ПУ</title>
    <link>https://apmath-spbu.github.io/courses/methodology/intro/</link>
    <description>Recent content in Введение on Материалы курсов на кафедре Технологии Программирования. ПМ-ПУ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru-ru</language><atom:link href="https://apmath-spbu.github.io/courses/methodology/intro/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>История</title>
      <link>https://apmath-spbu.github.io/courses/methodology/intro/history/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://apmath-spbu.github.io/courses/methodology/intro/history/</guid>
      <description>Фреймворк методологии разработки программного обеспечения (SDM - Software Developer Methodology) появился только в 1960-х годах. Жизненный цикл разработки системы (SDLC - Software Development Life Cycle) можно рассматривать как старейшую формализованную методологическую основу для построения информационных систем . Основная идея SDLC заключалась в том, чтобы «продолжать разработку информационных систем очень продуманным, структурированным и методичным образом, требуя, чтобы каждый этап жизненного цикла - от зарождения идеи до доставки окончательной системы - выполнялся. выполняется жестко и последовательно «в контексте применяемой структуры.</description>
    </item>
    
    <item>
      <title>Прототипирование</title>
      <link>https://apmath-spbu.github.io/courses/methodology/intro/prototyping/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://apmath-spbu.github.io/courses/methodology/intro/prototyping/</guid>
      <description>Создание прототипов программного обеспечения - это создание прототипов, то есть неполных версий разрабатываемой программы.
Основные принципы:
 Прототипирование - это не отдельная полная методология разработки, а, скорее, подход к опробованию определенных функций в контексте полной методологии (например, инкрементальной, спиральной или быстрой разработки приложений (RAD)). Попытки снизить неотъемлемый риск проекта за счет разделения проекта на более мелкие сегменты и обеспечения большей простоты внесения изменений в процессе разработки. Клиент участвует на протяжении всего процесса разработки, что увеличивает вероятность принятия окончательного варианта реализации.</description>
    </item>
    
  </channel>
</rss>
